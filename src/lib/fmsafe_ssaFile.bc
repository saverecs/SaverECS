; ModuleID = 'benchmarks/thermostat/thermostat.c'
source_filename = "benchmarks/thermostat/thermostat.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.INPUT_VAL = type { double, i32, i32, i32, i32, i32 }
%struct.RETURN_VAL = type { double }

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local i8* @controller(%struct.INPUT_VAL* nocapture %0, %struct.RETURN_VAL* %1) local_unnamed_addr #0 !dbg !7 {
  call void @llvm.dbg.value(metadata %struct.INPUT_VAL* %0, metadata !30, metadata !DIExpression()), !dbg !43
  call void @llvm.dbg.value(metadata %struct.RETURN_VAL* %1, metadata !31, metadata !DIExpression()), !dbg !43
  call void @llvm.dbg.value(metadata i32 0, metadata !32, metadata !DIExpression()), !dbg !43
  call void @llvm.dbg.value(metadata i32 5, metadata !37, metadata !DIExpression()), !dbg !43
  call void @llvm.dbg.value(metadata double 7.000000e+01, metadata !40, metadata !DIExpression()), !dbg !43
  call void @llvm.dbg.value(metadata double 6.600000e+01, metadata !41, metadata !DIExpression()), !dbg !43
  call void @llvm.dbg.value(metadata i32 5, metadata !42, metadata !DIExpression()), !dbg !43
  %3 = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %0, i64 0, i32 0, !dbg !44
  %4 = load double, double* %3, align 8, !dbg !44, !tbaa !45
  call void @llvm.dbg.value(metadata double %4, metadata !39, metadata !DIExpression()), !dbg !43
  %5 = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %0, i64 0, i32 1, !dbg !51
  %6 = load i32, i32* %5, align 8, !dbg !51, !tbaa !52
  call void @llvm.dbg.value(metadata i32 %6, metadata !32, metadata !DIExpression()), !dbg !43
  %7 = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %0, i64 0, i32 2, !dbg !53
  %8 = load i32, i32* %7, align 4, !dbg !53, !tbaa !54
  call void @llvm.dbg.value(metadata i32 %8, metadata !33, metadata !DIExpression()), !dbg !43
  %9 = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %0, i64 0, i32 3, !dbg !55
  %10 = load i32, i32* %9, align 8, !dbg !55, !tbaa !56
  call void @llvm.dbg.value(metadata i32 %10, metadata !34, metadata !DIExpression()), !dbg !43
  %11 = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %0, i64 0, i32 4, !dbg !57
  %12 = load i32, i32* %11, align 4, !dbg !57, !tbaa !58
  call void @llvm.dbg.value(metadata i32 %12, metadata !35, metadata !DIExpression()), !dbg !43
  %13 = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %0, i64 0, i32 5, !dbg !59
  call void @llvm.dbg.value(metadata i32 undef, metadata !36, metadata !DIExpression()), !dbg !43
  %14 = fcmp oge double %4, 6.600000e+01, !dbg !60
  %15 = fcmp olt double %4, 7.000000e+01, !dbg !62
  %16 = and i1 %14, %15, !dbg !63
  br i1 %16, label %22, label %17, !dbg !63

17:                                               ; preds = %2
  %18 = fcmp ult double %4, 7.000000e+01, !dbg !64
  br i1 %18, label %19, label %22, !dbg !66

19:                                               ; preds = %17
  %20 = fcmp olt double %4, 6.600000e+01, !dbg !67
  %21 = select i1 %20, i32 2, i32 %8
  br label %22

22:                                               ; preds = %19, %17, %2
  %23 = phi i32 [ 3, %2 ], [ 1, %17 ], [ %21, %19 ], !dbg !69
  call void @llvm.dbg.value(metadata i32 %23, metadata !36, metadata !DIExpression()), !dbg !43
  %24 = icmp sgt i32 %12, 4, !dbg !70
  %25 = icmp sgt i32 %10, 4, !dbg !72
  %26 = or i1 %25, %24, !dbg !73
  %27 = select i1 %26, i32 0, i32 %6, !dbg !73
  call void @llvm.dbg.value(metadata i32 %27, metadata !32, metadata !DIExpression()), !dbg !43
  %28 = icmp ne i32 %23, %8, !dbg !74
  %29 = zext i1 %28 to i32, !dbg !76
  %30 = add nsw i32 %27, %29, !dbg !76
  call void @llvm.dbg.value(metadata i32 %30, metadata !32, metadata !DIExpression()), !dbg !43
  %31 = icmp sgt i32 %30, 4, !dbg !77
  %32 = select i1 %31, i32 %8, i32 %23, !dbg !79
  call void @llvm.dbg.value(metadata i32 %32, metadata !36, metadata !DIExpression()), !dbg !43
  %33 = icmp eq i32 %32, 1, !dbg !80
  %34 = add nsw i32 %12, 1, !dbg !82
  %35 = add nsw i32 %10, 1, !dbg !82
  %36 = select i1 %33, i32 %34, i32 0, !dbg !82
  %37 = select i1 %33, i32 0, i32 %35, !dbg !82
  call void @llvm.dbg.value(metadata i32 %37, metadata !34, metadata !DIExpression()), !dbg !43
  call void @llvm.dbg.value(metadata i32 %36, metadata !35, metadata !DIExpression()), !dbg !43
  %38 = icmp eq i32 %32, 3, !dbg !83
  %39 = select i1 %38, double 7.000000e+01, double 1.000000e+02, !dbg !83
  %40 = select i1 %33, double 2.000000e+01, double %39, !dbg !83
  call void @llvm.dbg.value(metadata double %40, metadata !38, metadata !DIExpression()), !dbg !43
  %41 = getelementptr inbounds %struct.RETURN_VAL, %struct.RETURN_VAL* %1, i64 0, i32 0, !dbg !84
  store double %40, double* %41, align 8, !dbg !85, !tbaa !86
  store i32 %32, i32* %13, align 8, !dbg !88, !tbaa !89
  store i32 %30, i32* %5, align 8, !dbg !90, !tbaa !52
  store i32 %32, i32* %7, align 4, !dbg !91, !tbaa !54
  store i32 %37, i32* %9, align 8, !dbg !92, !tbaa !56
  store i32 %36, i32* %11, align 4, !dbg !93, !tbaa !58
  %42 = bitcast %struct.RETURN_VAL* %1 to i8*, !dbg !94
  ret i8* %42, !dbg !95
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "benchmarks/thermostat/thermostat.c", directory: "/home/max/projects/research/nds2/SaverECS/src")
!2 = !{}
!3 = !{i32 7, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 10.0.0-4ubuntu1 "}
!7 = distinct !DISubprogram(name: "controller", scope: !1, file: !1, line: 8, type: !8, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !29)
!8 = !DISubroutineType(types: !9)
!9 = !{!10, !11, !24}
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "INPUT_VAL", file: !13, line: 16, baseType: !14)
!13 = !DIFile(filename: "benchmarks/thermostat/thermostat.h", directory: "/home/max/projects/research/nds2/SaverECS/src")
!14 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 7, size: 256, elements: !15)
!15 = !{!16, !18, !20, !21, !22, !23}
!16 = !DIDerivedType(tag: DW_TAG_member, name: "state_temperature", scope: !14, file: !13, line: 8, baseType: !17, size: 64)
!17 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "chat_detect", scope: !14, file: !13, line: 10, baseType: !19, size: 32, offset: 64)
!19 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "previous_cmd_to_heater", scope: !14, file: !13, line: 11, baseType: !19, size: 32, offset: 96)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "on_count", scope: !14, file: !13, line: 12, baseType: !19, size: 32, offset: 128)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "off_count", scope: !14, file: !13, line: 13, baseType: !19, size: 32, offset: 160)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_to_heater", scope: !14, file: !13, line: 14, baseType: !19, size: 32, offset: 192)
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64)
!25 = !DIDerivedType(tag: DW_TAG_typedef, name: "RETURN_VAL", file: !13, line: 5, baseType: !26)
!26 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 2, size: 64, elements: !27)
!27 = !{!28}
!28 = !DIDerivedType(tag: DW_TAG_member, name: "next_u", scope: !26, file: !13, line: 3, baseType: !17, size: 64)
!29 = !{!30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42}
!30 = !DILocalVariable(name: "input", arg: 1, scope: !7, file: !1, line: 8, type: !11)
!31 = !DILocalVariable(name: "ret_val", arg: 2, scope: !7, file: !1, line: 8, type: !24)
!32 = !DILocalVariable(name: "chatter_detect", scope: !7, file: !1, line: 10, type: !19)
!33 = !DILocalVariable(name: "previous_command_to_heater", scope: !7, file: !1, line: 11, type: !19)
!34 = !DILocalVariable(name: "on_counter", scope: !7, file: !1, line: 12, type: !19)
!35 = !DILocalVariable(name: "off_counter", scope: !7, file: !1, line: 12, type: !19)
!36 = !DILocalVariable(name: "command_to_heater", scope: !7, file: !1, line: 13, type: !19)
!37 = !DILocalVariable(name: "chatter_limit", scope: !7, file: !1, line: 15, type: !19)
!38 = !DILocalVariable(name: "uVal", scope: !7, file: !1, line: 16, type: !17)
!39 = !DILocalVariable(name: "room_temp", scope: !7, file: !1, line: 16, type: !17)
!40 = !DILocalVariable(name: "MAX_TEMP", scope: !7, file: !1, line: 17, type: !17)
!41 = !DILocalVariable(name: "MED_TEMP", scope: !7, file: !1, line: 17, type: !17)
!42 = !DILocalVariable(name: "NO_CHAT_FOR", scope: !7, file: !1, line: 18, type: !19)
!43 = !DILocation(line: 0, scope: !7)
!44 = !DILocation(line: 21, column: 21, scope: !7)
!45 = !{!46, !47, i64 0}
!46 = !{!"", !47, i64 0, !50, i64 8, !50, i64 12, !50, i64 16, !50, i64 20, !50, i64 24}
!47 = !{!"double", !48, i64 0}
!48 = !{!"omnipotent char", !49, i64 0}
!49 = !{!"Simple C/C++ TBAA"}
!50 = !{!"int", !48, i64 0}
!51 = !DILocation(line: 23, column: 26, scope: !7)
!52 = !{!46, !50, i64 8}
!53 = !DILocation(line: 24, column: 38, scope: !7)
!54 = !{!46, !50, i64 12}
!55 = !DILocation(line: 25, column: 22, scope: !7)
!56 = !{!46, !50, i64 16}
!57 = !DILocation(line: 26, column: 23, scope: !7)
!58 = !{!46, !50, i64 20}
!59 = !DILocation(line: 27, column: 29, scope: !7)
!60 = !DILocation(line: 30, column: 15, scope: !61)
!61 = distinct !DILexicalBlock(scope: !7, file: !1, line: 30, column: 5)
!62 = !DILocation(line: 30, column: 40, scope: !61)
!63 = !DILocation(line: 30, column: 27, scope: !61)
!64 = !DILocation(line: 32, column: 20, scope: !65)
!65 = distinct !DILexicalBlock(scope: !61, file: !1, line: 32, column: 10)
!66 = !DILocation(line: 32, column: 10, scope: !61)
!67 = !DILocation(line: 34, column: 20, scope: !68)
!68 = distinct !DILexicalBlock(scope: !65, file: !1, line: 34, column: 10)
!69 = !DILocation(line: 0, scope: !61)
!70 = !DILocation(line: 39, column: 17, scope: !71)
!71 = distinct !DILexicalBlock(scope: !7, file: !1, line: 39, column: 5)
!72 = !DILocation(line: 39, column: 46, scope: !71)
!73 = !DILocation(line: 39, column: 32, scope: !71)
!74 = !DILocation(line: 42, column: 23, scope: !75)
!75 = distinct !DILexicalBlock(scope: !7, file: !1, line: 42, column: 5)
!76 = !DILocation(line: 42, column: 5, scope: !7)
!77 = !DILocation(line: 44, column: 20, scope: !78)
!78 = distinct !DILexicalBlock(scope: !7, file: !1, line: 44, column: 5)
!79 = !DILocation(line: 44, column: 5, scope: !7)
!80 = !DILocation(line: 47, column: 23, scope: !81)
!81 = distinct !DILexicalBlock(scope: !7, file: !1, line: 47, column: 5)
!82 = !DILocation(line: 47, column: 5, scope: !7)
!83 = !DILocation(line: 55, column: 6, scope: !7)
!84 = !DILocation(line: 62, column: 11, scope: !7)
!85 = !DILocation(line: 62, column: 18, scope: !7)
!86 = !{!87, !47, i64 0}
!87 = !{!"", !47, i64 0}
!88 = !DILocation(line: 64, column: 24, scope: !7)
!89 = !{!46, !50, i64 24}
!90 = !DILocation(line: 65, column: 22, scope: !7)
!91 = !DILocation(line: 66, column: 33, scope: !7)
!92 = !DILocation(line: 67, column: 19, scope: !7)
!93 = !DILocation(line: 68, column: 20, scope: !7)
!94 = !DILocation(line: 70, column: 10, scope: !7)
!95 = !DILocation(line: 70, column: 3, scope: !7)
